{"name": "test_homework", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <run_test.TestHomeWork object at 0x03FD41D8>\n\n    def test_homework(self):\n        try:\n            driver = self.driver\n            driver.get(utils.URL)\n            homepage = HomePage(driver)\n    \n            homepage.navigate_our_jobs()\n            time.sleep(2)\n            homepage.navigate_our_customers()\n            time.sleep(2)\n            homepage.scroll_up()\n            time.sleep(2)\n>           homepage.click_whatsapp()\n\ntests\\run_test.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages\\HomePage\\flows.py:83: in click_whatsapp\n    Common.wait_for_element(self, Page.whatsapp_identify)\ncommonCommands.py:14: in wait_for_element\n    myelement = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"59da6e6a987097ad3c5fd9b34799c985\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0408EFE8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "test_homework_31-07-2020_13-05-13", "source": "446d048d-1924-483f-a8ec-21056a211a3a-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "0395f0f0-2ebc-40bc-9914-52c727210701-attachment.txt", "type": "text/plain"}], "start": 1596189887423, "stop": 1596189913997, "uuid": "6659a077-6b8c-433d-bcd6-659cab26563e", "historyId": "939b57afdab2b82466973cdd8d58fab7", "testCaseId": "b32f2b046f7595a62b5768b67db9831b", "fullName": "tests.run_test.TestHomeWork#test_homework", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('test_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "run_test"}, {"name": "subSuite", "value": "TestHomeWork"}, {"name": "host", "value": "DESKTOP-BFIIM5B"}, {"name": "thread", "value": "21128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.run_test"}]}